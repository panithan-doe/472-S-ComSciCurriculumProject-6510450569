name: CI-github-action

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop

jobs:
  testing:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h localhost" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Install MySQL Client
        run: sudo apt-get install -y mysql-client

      - name: Wait for MySQL
        run: |
          for i in {30..0}; do
            if mysqladmin ping -h127.0.0.1 -uroot -p${{ secrets.MYSQL_ROOT_PASSWORD }} --silent; then
              echo "MySQL is up!";
              break;
            fi
            echo 'Waiting for MySQL...';
            sleep 2;
          done

      - name: Copy environment file
        run: cp .env.example ./backend/.env

      - name: Set up Python
        uses: actions/setup-python@v5

      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirement.txt

      - name: Set database data
        working-directory: ./backend
        run: |
          python manage.py migrate

      - name: Run Tests
        working-directory: ./backend
        run: |
          pytest

  build:
    runs-on: ubuntu-latest

    env:
      FRONTEND_APP_NAME: "gitops-backend"
      BACKEND_APP_NAME: "gitops-backend"

    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push container frontend
        working-directory: ./frontend
        run: |-
          docker build -t ${{ env.FRONTEND_APP_NAME }} ./

      - name: Build and push container backend
        working-directory: ./backend
        run: |-
          docker build -t ${{ env.BACKEND_APP_NAME }} ./
